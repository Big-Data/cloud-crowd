h3. Version 0.2.9

* Added CloudCrowd.server? and CloudCrowd.node? methods, so that action
  dependencies can more easily be required only in the node.

h3. Version 0.2.8

* @WorkUnit.distribute_to_nodes@ has been optimized to run in chunks (of 25). CloudCrowd installations with many thousands of work units in the job queue should see a speed up in server throughput.
* Only try to load in actions from the 'actions_path' if it's specified *(chad)*
* Fixed checking for 'split' and 'merge' methods in Ruby 1.9 *(uiltondutra)*

h3. Version 0.2.7

* A @crowd cleanup --days DAYS@ command is now available, for cleaning up all completed jobs older than a certain age.
* The CloudCrowd module is now mixed in at the top level in @crowd console@ sessions, for easier access.
* Bugfixes for *RACK_ENV* not being properly set in Nodes, and *Timeout::Error* not being rescued in server-node communication.

h3. Version 0.2.6

* Jobs are now automatically cleaned up only if firing the @callback_url@ returns a *201 Created* HTTP status code (Previously, any 200-range code would cause a cleanup).

h3. Version 0.2.5

* Bugfix for PostgreSQL databases regarding WorkUnit reservation.

h3. Version 0.2.4

* The central server now removes a node from the pool after any kind of communication error, and nodes check in every five minutes to countervail this.
* Job completion callbacks now fired in a deferred thread.

h3. Version 0.2.3

* Fixed regression in @crowd install@, it takes paths again. (plus tests)

h3. Version 0.2.2

* The @crowd@ command now supports daemonized servers and nodes. The paths to store the log and pid files can be configured in *config.yml*. Use:
<pre>crowd -d [server node] [start stop restart]</pre> 

h3. Version 0.2.1

* Adds the ability to distribute work based on (one-minute) load average or available memory. In *config.yml*, specify @max_load@ or @min_free_memory@ (in megabytes). If a node crosses either of those thresholds, it will be considered busy until it goes back over to the good side of the line.

h3. Version 0.2.0

* Version 0.2.0 is backward-incompatible. The internals have changed a good deal. You'll need to reload your schema and update your *config.yml*.
* New architecture that gets rid of persistent *workers* in favor of persistent *nodes* (one node per machine), and ephemeral *workers*. This setup avoids polling, reduces latency when starting jobs, decreases load on the central server substantially, decreases resource use on the nodes, prevents actions from being capable of leaking memory, and so on...
* The *Operations Center* interface has been updated to show the nodes, and to display it if they become busy (have exhausted their allowed number of workers).
* The FilesystemStore now can be configured with a @local_storage_path@. This allows you to use a networked drive for asset storage.
* The dependency on the Daemons gem has been removed.
* The S3Store now uses HTTPS to upload files when you have @s3_authentication@ turned on.
* More validations and sanity checks all around.
* Added a @rake db:create_test_database@ task to help out folks who want to contribute to CloudCrowd.

h3. Version 0.1.0

* Initial release.